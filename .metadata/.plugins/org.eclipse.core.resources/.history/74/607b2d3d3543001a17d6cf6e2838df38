package com.salon.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.salon.exception.ResourceNotfoundException;
import com.salon.model.Salon;
import com.salon.model.User;
import com.salon.repository.SalonRepository;

@Service
public class SalonServiceImpl implements SalonService {

	@Autowired
	SalonRepository srepo;

	// add a new salon
	public int addSalon(Salon s) {
		Salon s1 = srepo.findByContact1(s.getContact1());
		if (s1 == null) {
			srepo.save(s);
			return 1;
		} else
			return 0;
	}

	// deactivate a salon
	public String deactivateUser(Long pk) {
		Salon salon = srepo.findById(pk).orElseThrow(() -> new ResourceNotfoundException("Salon", "pk", pk));
		salon.setActiveDeactive(0);
		srepo.save(salon);
		return "deactivated";
	}

	// update a salon
	public Salon updateSalonDetails(Long pk, Salon salon) {
		User u=salon.getUser();
		Salon s = srepo.findById(pk).orElseThrow(() -> new ResourceNotfoundException("Salon", "pk", pk));
		s.setAddress(salon.getAddress());
		s.setContact1(salon.getContact1());
		s.setContact2(salon.getContact2());
		s.setDescription(salon.getDescription());
		s.setHomeServiceFlag(salon.getHomeServiceFlag());
		s.setSalonName(salon.getSalonName());
		s.setSalonType(salon.getSalonType());
		s.setActiveDeactive(0);
		s.setUser(u);
		Salon c = srepo.save(s);
		return c;
	}

	// get all salons
	public List<Salon> getAllSalons() {
		List<Salon> salons=srepo.findAll();
		return salons;
	}
	
	
	//get salon by id
	public Salon getSalonDetails(Long pk) {
		return srepo.findById(pk).orElseThrow(() -> new ResourceNotfoundException("Salon", "pk", pk));
	}
}
